name: Build and deploy Node.js apps to Azure Web App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_deploy_app1:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Angular CLI and dependencies for App1
        run: |
          cd CeleSmart
          npm install -g @angular/cli
          npm install --legacy-peer-deps 

      - name: npm install, build, and test for App1
        run: |
          cd CeleSmart
          npm run build --if-present

      - name: List contents of deployment directory for App1
        run: |
          echo "Contents of deployment directory for App1:"
          ls -R ./CeleSmart/www
      
      - name: Upload artifact for deployment job for App1
        uses: actions/upload-artifact@v3
        with:
          name: node-app1
          path: ./CeleSmart/www

  build_and_deploy_app2:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install Angular CLI and dependencies for App2
        run: |
          cd sericulture
          npm install -g @angular/cli
          npm install --legacy-peer-deps 

      - name: npm install, build, and test for App2
        run: |
          cd sericulture
          npm run build --if-present

      - name: List contents of deployment directory for App2
        run: |
          echo "Contents of deployment directory for App2:"
          ls -R ./sericulture/www
      
      - name: Upload artifact for deployment job for App2
        uses: actions/upload-artifact@v3
        with:
          name: node-app2
          path: ./sericulture/www

  deploy_app1:
    runs-on: ubuntu-latest
    needs: build_and_deploy_app1
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp1.outputs.webapp-url }}
    
    steps:
      - name: Azure Login
        run: |
         az login
        
      - name: Download artifact from build job for App1
        uses: actions/download-artifact@v3
        with:
          name: node-app1

      - name: Print artifact contents for App1
        run: |
          echo "Contents of artifact for App1:"
          ls -R $GITHUB_WORKSPACE

      - name: 'Deploy to Azure Web App for App1'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp1
        with:
          app-name: 'CeleSmart'
          slot-name: 'Production'
          package: /home/runner/work/Dep/Dep
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_APP1 }}

  deploy_app2:
    runs-on: ubuntu-latest
    needs: build_and_deploy_app2
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp2.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job for App2
        uses: actions/download-artifact@v3
        with:
          name: node-app2

      - name: Print artifact contents for App2
        run: |
          echo "Contents of artifact for App2:"
          ls -R $GITHUB_WORKSPACE

      - name: 'Deploy to Azure Web App for App2'
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp2
        with:
          app-name: 'sericulture'
          slot-name: 'Production'
          package: ./sericulture/www
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_APP2 }}
